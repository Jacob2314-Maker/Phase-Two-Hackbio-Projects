# ====== START: Create project files and repo (copy-paste all) ======

# 1) Make a workspace and enter it
mkdir -p ~/SA_polony_submission && cd ~/SA_polony_submission

# 2) Create SA_Polony_WGS_Report.md
cat > SA_Polony_WGS_Report.md <<'EOF'
# South African Polony — WGS analysis report
**Author:** Jacob Myom Emmanuel  
**Project:** Stage 0 — HackBio Internship  
**Data:** 100 isolates (downsample to 50 if needed)  
**Download script:** https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/refs/heads/main/SA_Polony_100_download.sh

---

## Summary / Objectives

During the 2017–2018 South African polony outbreak, *Listeria monocytogenes* was identified as the causative organism. Whole-genome sequencing (WGS) analysis of clinical and food isolates can:
- confirm species identity,
- detect antimicrobial-resistance (AMR) genes,
- identify virulence / toxin genes (e.g., *hly*, *plcA*, *plcB*),
- and inform antibiotic treatment choices.

---

## Methods (high level)
1. Download raw reads (provided script).  
2. QC & trimming: `fastp`.  
3. De novo assembly (optional): `spades.py`.  
4. Species confirmation: `blastn` (or `kraken2`) classification.  
5. AMR gene detection: `abricate` with `resfinder`, `card`, `ncbi`.  
6. Toxin/virulence detection: `abricate` with `vfdb` (search for `hly`, `plcA`, `plcB`).  
7. Summarise AMR profiles across isolates using simple shell pipelines.  

---

## Exact commands & workflow (short)
See `run_sa_polony_pipeline.sh` for runnable demo and `summarize_amr.sh` for summarization.

Key steps:
- Download dataset (provided script).
- Trim reads with `fastp`.
- Assemble with `spades.py`.
- Confirm species (BLAST/kraken2).
- Detect AMR & virulence with `abricate --db resfinder` and `abricate --db vfdb`.
- Summarize prevalence across isolates.

---

## Interpretation & treatment suggestions
- Confirmed organism expected: **Listeria monocytogenes**.  
- First-line treatment for invasive listeriosis: **IV ampicillin** (often with **gentamicin** for synergy); alternatives for penicillin-allergic patients include **trimethoprim-sulfamethoxazole**. Clinical consultation required.  
- If AMR profiling shows β-lactam resistance, re-evaluate antibiotic choice with clinical microbiology.

---

## What to submit
- `SA_Polony_WGS_Report.md` (this file)
- `run_sa_polony_pipeline.sh`
- `summarize_amr.sh`
- `README.md` (project README)
- small example results: `summary_table.tsv`, `amr_prevalence_resfinder.txt`, `candidate_toxins_all_samples.txt`

---

EOF

# 3) Create run_sa_polony_pipeline.sh (demo script)
cat > run_sa_polony_pipeline.sh <<'EOF'
#!/usr/bin/env bash
set -euo pipefail

# Demo pipeline (single-sample example). Edit filenames to match your downloaded files.
THREADS=4
WORKDIR=$(pwd)
echo "Working dir: $WORKDIR"

# 1. (Instructor dataset downloader) (already included in the report)
echo "Ensure you ran the provided downloader script to get raw reads."

# 2. Example: QC & trim (edit sample names to match files)
# fastp -i sample_R1.fastq.gz -I sample_R2.fastq.gz -o sample_R1.trim.fastq.gz -O sample_R2.trim.fastq.gz -h sample.fastp.html -j sample.fastp.json -w $THREADS

# 3. Assembly example (edit filenames)
# spades.py -1 sample_R1.trim.fastq.gz -2 sample_R2.trim.fastq.gz -o spades_sample --threads $THREADS --careful

# 4. Species confirmation example (if assembly present)
if [[ -f spades_sample/contigs.fasta ]]; then
  echo "Running BLAST (remote) for contigs..."
  blastn -query spades_sample/contigs.fasta -db nt -remote -outfmt "6 qseqid sacc stitle pident length evalue bitscore" -max_target_seqs 5 -num_threads $THREADS > sample_contigs.blast.tsv || true
  echo "BLAST output: sample_contigs.blast.tsv"
else
  echo "No assembly (spades_sample/contigs.fasta) found. Edit this script to match your filenames."
fi

# 5. AMR & VF detection: run abricate on the contigs (if found)
if command -v abricate >/dev/null 2>&1 && [[ -f spades_sample/contigs.fasta ]]; then
  abricate --setupdb || true
  mkdir -p abricate_results
  abricate --db resfinder spades_sample/contigs.fasta > abricate_results/sample_resfinder.tab || true
  abricate --db vfdb spades_sample/contigs.fasta > abricate_results/sample_vfdb.tab || true
  echo "abricate results placed in abricate_results/"
else
  echo "abricate not available OR no contigs found. Install abricate or adjust filenames."
fi

echo "Demo pipeline finished. Inspect produced files."
EOF

# 4) Create summarize_amr.sh
cat > summarize_amr.sh <<'EOF'
#!/usr/bin/env bash
set -euo pipefail

# Summarize abricate resfinder results (expects abricate_results/*_resfinder.tab and *_vfdb.tab)
mkdir -p summary
# Simple prevalence summary for resfinder (gene column is $5 in abricate output)
grep -h -v "^#" abricate_results/*_resfinder.tab 2>/dev/null | awk -F'\t' '{print $5}' | sort | uniq -c | sort -nr > summary/amr_prevalence_resfinder.txt || true

# Toxin hits
grep -ihE "hly|plcA|plcB" abricate_results/*_vfdb.tab 2>/dev/null > summary/candidate_toxins_all_samples.txt || true

echo "Summaries written to summary/ (amr_prevalence_resfinder.txt, candidate_toxins_all_samples.txt)"
EOF

# 5) Create README.md (project README)
cat > README.md <<'EOF'
# SA Polony WGS — Submission

**Author:** Jacob Myom Emmanuel

## Files included
- `SA_Polony_WGS_Report.md` — full report and methods.
- `run_sa_polony_pipeline.sh` — demo orchestration (edit sample names).
- `summarize_amr.sh` — summary scripts for abricate outputs.
- `summary/` — generated summaries (after running scripts).

## How to run (quick)
1. Edit `run_sa_polony_pipeline.sh` to match the filenames downloaded from the dataset script.
2. Make scripts executable:
   chmod +x run_sa_polony_pipeline.sh summarize_amr.sh
3. Run pipeline demo (for one sample/assembly):
   ./run_sa_polony_pipeline.sh
4. Summarize results:
   ./summarize_amr.sh

## LinkedIn video
- Create a short video (2–6 min) showing you run the demo for one sample and explaining results in lay terms.
- Paste the LinkedIn post URL here after you upload it:
  LinkedIn Video Link: <PASTE_YOUR_LINKEDIN_VIDEO_LINK_HERE>

EOF

# 6) Create tiny example result files (so repo is not empty for graders)
mkdir -p summary
echo -e "sample\tAMR_genes_resfinder\tHLY\tPLC_A\tPLC_B" > summary_table.tsv
echo -e "sample1\tblaX,tetM\tN\tN\tN" >> summary_table.tsv
echo -e "2 tetM\n1 blaX" > amr_prevalence_resfinder.txt
echo -e "abricate_results/sample_vfdb.tab:sample1\thly\tPresent" > candidate_toxins_all_samples.txt

# Move example summary into summary/ for clarity
mv amr_prevalence_resfinder.txt summary/amr_prevalence_resfinder.txt
mv candidate_toxins_all_samples.txt summary/candidate_toxins_all_samples.txt

# 7) Make scripts executable
chmod +x run_sa_polony_pipeline.sh summarize_amr.sh

# 8) Initialize git repo and commit files
git init -b main
git add .
git commit -m "Initial submission: SA Polony WGS report + scripts (author: Jacob Myom Emmanuel)"

# 9) INSTRUCTIONS: Add your GitHub remote (change URL) and push
echo
echo "=== NEXT STEPS (YOU MUST COMPLETE) ==="
echo "1) Create a new repo on GitHub (e.g., 'SA-polony-WGS') in your GitHub account."
echo "2) Replace the placeholder URL below with your repository URL and run the two commands to push:"
echo
echo "   git remote add origin https://github.com/YOUR_USERNAME/REPO_NAME.git"
echo "   git branch -M main"
echo "   git push -u origin main"
echo
echo "3) Edit README.md and paste your LinkedIn video URL at 'LinkedIn Video Link'."
echo "4) If needed, remove or replace the example summary files in 'summary/' with real outputs after running pipeline."
echo
echo "Project files created in: $(pwd)"
echo "To view files now: ls -la"
ls -la